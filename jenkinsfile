pipeline {
    agent any

    environment {
        NODEJS_VERSION = '14'
        DOCKER_IMAGE_NAME = 'my-nodejs-app'
        NEXUS_REPO_URL = 's001elk2.konsalt.info:5555'
        OPENSHIFT_PROJECT = 'mywebapp'
        IMAGE_TAG = "${env.BUILD_ID}-${env.GIT_COMMIT}"
        OPENSHIFT_API = 'api.konsno.konsalt.info:6443'
        DEPLOYMENT_FILE = 'deployment/deployment-mywebapp.yaml'
        IMAGE_NAME = "$NEXUS_REPO_URL/$DOCKER_IMAGE_NAME:$IMAGE_TAG"
        GIT_TOKEN = credentials('my_git')
    }

    stages {
        stage('Clone Repository') {
            steps {
                dir('GitRepoDir') {
                    script {
                        if (fileExists('GitRep')) {
                            dir('GitRep') {
                                sh 'git pull'
                                sh 'git checkout staging'
                            }
                        } else {
                            sh 'git clone -b staging https://$GIT_TOKEN@github.com/ercanuz/GitRep'
                        }
                    }
                }
            }
        }

        stage('Build Docker Image') {
            steps {
                dir('GitRepoDir/GitRep') {
                    withCredentials([usernamePassword(credentialsId: 'b8a4eefc-c6dd-49ac-b1e3-ae1c1efb5dad', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                        sh "docker login -u $NEXUS_USERNAME -p $NEXUS_PASSWORD $NEXUS_REPO_URL"
                    }
                    sh "docker build -t $DOCKER_IMAGE_NAME:$IMAGE_TAG ."
                    sh "docker image tag $DOCKER_IMAGE_NAME:$IMAGE_TAG $IMAGE_NAME"
                }
            }
        }

        stage('Push to Nexus') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'b8a4eefc-c6dd-49ac-b1e3-ae1c1efb5dad', usernameVariable: 'NEXUS_USERNAME', passwordVariable: 'NEXUS_PASSWORD')]) {
                    sh "docker login -u $NEXUS_USERNAME -p $NEXUS_PASSWORD $NEXUS_REPO_URL"
                }
                sh "docker push $IMAGE_NAME"
            }
        }

        stage('Replace Image Name') {
            steps {
                dir('GitRepoDir/GitRep') {
                    script {
                        // Update the image name in the deployment YAML file
                        sh 'sed -i "s#image: s001elk2.konsalt.info:5555/my-nodejs-app.*#image: \\"${IMAGE_NAME}\\"#" $DEPLOYMENT_FILE'
                    }
                }
            }
        }

        stage('Commit and Push Changes') {
            steps {
                dir('GitRepoDir/GitRep') {
                    script {
                        sh 'git config --global user.email "ercan.uzundal@konsalt.com.tr"'
                        sh 'git remote set-url origin https://$GIT_TOKEN@github.com/ercanuz/GitRep.git'
                        sh 'git add -A'
                        sh 'git commit -am "Updated Version"'
                        sh 'git pull origin staging --rebase'
                        sh 'git push origin staging'
                    }
                }
            }
        }
    }

    post {
        success {
            echo 'Pipeline succeeded! Application deployed successfully.'
        }
        failure {
            echo 'Pipeline failed! Check logs for details.'
        }
    }
}
